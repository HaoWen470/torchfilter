:mod:`diffbayes.train._train_kalman_filter_measurement`
=======================================================

.. py:module:: diffbayes.train._train_kalman_filter_measurement

.. autoapi-nested-parse::

   Private module; avoid importing from directly.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   diffbayes.train._train_kalman_filter_measurement.train_kalman_filter_measurement


.. function:: train_kalman_filter_measurement(buddy: fannypack.utils.Buddy, measurement_model: diffbayes.base.KalmanFilterMeasurementModel, dataloader: DataLoader, *, loss_function: Callable[[torch.Tensor, torch.Tensor], torch.Tensor] = F.mse_loss, log_interval: int = 10, optimizer_name='train_kalman_filter_measurement') -> None

   Optimizes a Kalman filter measurement model's prediction accuracy. Minimizes
   output mean error only; does not define a loss on uncertainty.

   :param buddy: Training helper.
   :type buddy: fannypack.utils.Buddy
   :param measurement_model: Model to train.
   :type measurement_model: diffbayes.base.KalmanFilterMeasurementModel
   :param dataloader: Loader for a SingleStepDataset.
   :type dataloader: DataLoader

   :keyword loss_function: Loss function, from ``torch.nn.functional``.
                           Defaults to MSE.
   :kwtype loss_function: callable, optional
   :keyword log_interval: Minibatches between each Tensorboard log.
   :kwtype log_interval: int, optional


