:orphan:

:mod:`diffbayes.datasets._single_step_dataset`
==============================================

.. py:module:: diffbayes.datasets._single_step_dataset


Module Contents
---------------

.. py:class:: SingleStepDataset(trajectories: List[types.TrajectoryTupleNumpy])

   Bases: :class:`torch.utils.data.Dataset`

   A data preprocessor for producing single-step training examples from
   a list of trajectories.

   :param trajectories: list of trajectories, where each is a tuple of
                        ``(states, observations, controls)``. Each tuple member should be
                        either a numpy array or dict of numpy arrays with shape ``(T, ...)``.
   :type trajectories: list

   .. method:: __getitem__(self, index: int)


      Get a single-step prediction sample from our dataset.

      :param index: Subsequence number in our dataset.
      :type index: int

      :returns: *tuple* -- ``(initial_state, next_state, observation, control)`` tuple that
                contains data for a single subsequence. Each tuple member should be either a
                numpy array or dict of numpy arrays with shape ``(subsequence_length, ...)``.


   .. method:: __len__(self)


      Total number of subsequences in the dataset.

      :returns: *int* -- Length of dataset.



