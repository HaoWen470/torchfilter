:orphan:

:mod:`torchfilter.train._train_particle_filter_measurement`
===========================================================

.. py:module:: torchfilter.train._train_particle_filter_measurement

.. autoapi-nested-parse::

   Private module; avoid importing from directly.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   torchfilter.train._train_particle_filter_measurement.train_particle_filter_measurement


.. function:: train_particle_filter_measurement(buddy: fannypack.utils.Buddy, measurement_model: torchfilter.base.ParticleFilterMeasurementModel, dataloader: DataLoader, *, loss_function: Callable[[torch.Tensor, torch.Tensor], torch.Tensor] = F.mse_loss, log_interval: int = 10) -> None

   Reference implementation for pre-training a particle filter measurement model.
   Minimizes prediction error for log-likelihood outputs from (state, observation)
   pairs.

   :param buddy: Training helper.
   :type buddy: fannypack.utils.Buddy
   :param measurement_model: Model.
   :type measurement_model: torchfilter.base.ParticleFilterMeasurementModel
   :param dataloader: Loader for a ParticleFilterMeasurementDataset.
   :type dataloader: DataLoader

   :keyword loss_function: Loss function, from ``torch.nn.functional``.
                           Defaults to MSE.
   :kwtype loss_function: callable, optional
   :keyword log_interval: Minibatches between each Tensorboard log.
   :kwtype log_interval: int, optional


